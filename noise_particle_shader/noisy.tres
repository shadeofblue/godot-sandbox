[gd_resource type="Shader" format=2]

[resource]
code = "shader_type particles;

uniform vec2 pos = vec2(0.0, 0.0);
uniform float radius = 60.0;

const float PI = 3.14;
const float PI2 = 2.0 * PI;
const float PI1_2 = 0.5 * PI;


float rnd_fl(float f) {
	return fract(sin(f*0.5453123)*sin(f/0.23123)/sin(f*0.83123));
}

float rnd(int index, float time, float qa, float qb) {
	return rnd_fl(float(index) * fract(sin(time + qa) + qb));
}



void vertex() {
	float r = rnd(INDEX, TIME, 3.213, 1.3) * radius;
	float phi = rnd(INDEX, TIME, 1.53334, 2.5) * PI2;

	vec2 n = vec2(pos.x + sin(phi) * r, pos.y + cos(phi) * r);

	TRANSFORM[3][0] = n.x;
	TRANSFORM[3][1] = n.y;
}
"
